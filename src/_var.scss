:root {
  --main-color: #fff;
  --text-color: #000;
  --hover-color: #f6f6f6;
  --shadow-color: #ddd;
  --section-color: #f1f5f9;
  //#f1f5f9
  // #b5b5b5
  // #f6f6f6
  --SpText-color: #eb5424;
  --main-transition: 0.5s;
  --blue-color: #0075ff;
  --blue-alt-color: #0d69d5;
  --orange-color: #f59e0b;
  --green-color: #22c55e;
  --red-color: #f44336;
  --grey-color: #888;
}
// background-image: linear-gradient(to top, #09203f 0%, #537895 100%);
// background-image: linear-gradient(to right, #243949 0%, #517fa4 100%);
//  media queries
$max-mobile: "max-width:767px";
$min-mobile: "min-width:768px";
$very-sm: "max-width:575px";

$max-med: "max-width:991px";
$min-med: "min-width:992px";
$max-lg: "max-width:1199px";
$min-lg: "min-width:1200px";
//
* {
  margin: 0px;
  padding: 0px;
  box-sizing: border-box;
  color: var(--text-color);
  &::selection {
    background-color: var(--text-color);
    color: var(--main-color);
  }
}

@mixin media($point) {
  @if $point== "mobile" {
    @media ($max-mobile) {
      @content;
    }
  } @else if $point== "mdMobile" {
    @media ($min-mobile) {
      @content;
    }
  } @else if $point== "small" {
    @media ($max-med) {
      @content;
    }
  } @else if $point== "mdSmall" {
    @media ($min-med) {
      @content;
    }
  } @else if $point== "medium" {
    @media ($max-lg) {
      @content;
    }
  } @else if $point == "large" {
    @media ($min-lg) {
      @content;
    }
  } @else if $point == "verySmall" {
    @media ($very-sm) {
      @content;
    }
  }
}
//  media queries
@mixin gradient($deg) {
  background-image: linear-gradient(
    $deg,
    var(--main-color),
    var(--second-color)
  );
}
// fill color
@mixin fillColor() {
  background-clip: text;
  -moz-background-clip: text;
  -o-background-clip: text;
  -webkit-background-clip: text;
  -webkit-text-fill-color: transparent;
}

// fill color
// gradient text
@mixin textgdarient {
  @include gradient(45deg);
  -webkit-background-clip: text;
  -webkit-text-fill-color: transparent;
}
// @mixin gradient2($deg) {
//   background-image: linear-gradient($deg, $grad2-clr-left, $grad2-clr-right);
// }
// light and dark mode
$them: "dark";
%lightORdark {
  @if $them== "light" {
    background-color: white;
    color: black;
  } @else {
    background-color: black;
    color: white;
  }
}
// light and dark mode
// list style
@mixin list-reset {
  padding: 0px;
  margin: 0px;
  list-style: none;
}
// list style
// circle
@mixin circle($value) {
  width: $value;
  height: $value;
  border-radius: 50%;
}
// circle
// centering by flex
@mixin flexcenter {
  display: flex;
  justify-content: center;
  align-items: center;
}
// centering by flex
// overlay

@mixin overlay($color, $opacity) {
  content: "";
  position: absolute;
  left: 0px;
  top: 0px;
  width: 100%;
  height: 100%;
  background-color: $color;
  opacity: $opacity;
}
// overlay
// grid
@mixin gridcol($min, $gap) {
  display: grid;
  grid-template-columns: repeat(auto-fill, minmax($min, 1fr));
  gap: $gap;
}
// grid
// animation
@mixin keyF($animation-name) {
  @keyframes #{$animation-name} {
    @content;
  }
  @-webkit-keyframes #{$animation-name} {
    @content;
  }
}
// animation

// hover card
@mixin cardhover($elementName, $rotateDeg, $rotateWay) {
  .#{$elementName} {
    position: relative;
    width: 300px;
    height: 400px;
    transition: 0.5s;
    transform-style: preserve-3d;
    transform: perspective(1000px);
    .card1,
    .card2 {
      position: absolute;
      width: 100%;
      height: 100%;
      left: 0px;
      top: 0px;
      text-transform: capitalize;
      color: white;
    }
    .card2 {
      backface-visibility: hidden;
      @if $rotateWay == "y" {
        transform: rotateY($rotateDeg);
      } @else {
        transform: rotateX($rotateDeg);
      }
    }
    &:hover {
      @if $rotateWay == "y" {
        transform: rotateY(-$rotateDeg);
      } @else {
        transform: rotateX(-$rotateDeg);
      }
    }
  }
}
// zic
// shadow
@mixin shadow {
  box-shadow: 0px 12px 20px 0px rgba(black, 0.13),
    0px 2px 4px 0px rgba(black, 0.12);
}
// shadow
@mixin ziczack($className, $height) {
  .#{$className} {
    position: relative;
    z-index: 100;
    position: absolute;
    z-index: 100;
    height: 40px;
    background-size: 40px 40px;
    width: 100%;
    background-image: linear-gradient(
        135deg,
        var(--light-bg) 25%,
        transparent 25%
      ),
      linear-gradient(225deg, var(--light-bg) 25%, transparent 25%);
  }
}

// zic
// hover card
// container
@mixin container {
  @media (min-width: 768px) {
    .container {
      width: 750px;
    }
  }
  /* Medium */
  @media (min-width: 992px) {
    .container {
      width: 970px;
    }
  }
  /* Large */
  @media (min-width: 1200px) {
    .container {
      width: 1170px;
    }
  }
}
// container
/* Start Color */
.c-black {
  color: black;
}
.c-white {
  color: white;
}
.c-grey {
  color: var(--grey-color);
}
.c-red {
  color: var(--red-color);
}
.c-green {
  color: var(--green-color);
}
.c-blue {
  color: var(--blue-color);
}
.c-orange {
  color: var(--orange-color);
}
.bg-red {
  background-color: var(--red-color);
}
.bg-red-op {
  background-color: rgb(244 67 54 / 20%);
  color: var(--red-color);
}
.bg-green {
  background-color: var(--green-color);
}
.bg-green-op {
  background-color: rgb(34 197 94 / 20%);
  color: var(--green-color);
}
.bg-blue {
  background-color: var(--blue-color);
}
.bg-blue-op {
  background-color: rgb(0 117 255 / 20%);
  color: var(--blue-color);
}
.bg-orange {
  background-color: var(--orange-color);
}
.bg-orange-op {
  background-color: rgb(245 158 11 / 20%);
  color: var(--orange-color);
}
.bg-white {
  background-color: white;
}
.bg-eee {
  background-color: #eee;
}
//
// border-radius
.radius {
  border-radius: 15px;
}
.radius-6 {
  border-radius: 6px;
}
